#!/usr/bin/env ruby

require "smart_machine"

command = ARGV.shift

machine = SmartMachine::Machine.new

case command
when "new"
	raise "Can't create a machine inside a machine. Please come out of the machine directory to create another machine." if machine.in_machine_dir?

	name = ARGV.shift
	machine.create(name)
	return

when "--version"
	puts "SmartMachine #{SmartMachine.version}"
	return

when "runner"
	exec "smartrunner #{ARGV.join(' ')}"
	return

end

if machine.in_machine_dir?
	case command
	when "credentials:edit"
		credentials = SmartMachine::Credentials.new
		credentials.edit
	when "ssh"
		machine.ssh
	when "install"
		machine.install package_name: ARGV[0]
	when "uninstall"
		machine.uninstall package_name: ARGV[0]
	when "grids"
		machine.grids ARGV
	when "apps"
		machine.apps ARGV
	when "ps"
		machine.ps ARGV
	when "logs"
		machine.logs ARGV
	when "sync"
		sync = SmartMachine::Sync.new
		sync.run
	else
		puts "Help: Specify a valid smartmachine command to execute inside the machine directory."
	end
else
	puts "Help: Specify a valid smartmachine command to execute. Are you in the correct directory to run this command?"
end
